@startuml headers 

object main{
    主函数
}

'package Enviroment{
'    object glm{
'        线性代数库
'    }
'    object GLFW_GLAD{
'        你懂的
'    }
'    'glm -right-> GLFW_GLAD
'}

package Scr{
    object Log{
        日志输出
    }
    object Croods{
        坐标相关
    }
    object Noise{
        噪声类
    }
    object Renderer{
        渲染相关
    }
    object Texture{
        加载纹理
    }
    object TextureSegmentation{
        获取纹理索引
    }
    package World{
        package Block{
            object Block{
                方块类
            }
        }
        package Chunk{
            object Chunk{
                区块
            }
            object ChunkMeshBuilder{
                构建区块Mesh
            }
            object Mesh{
                Mesh对象
            }
            object VerticesData{
                构建Mesh时的必要数据
            }
        }
        object World{
            世界类
        }
        note right of World : World.h to ChunkMeshBuilder.cpp
    }
    object E_BlockType{
        定义方块
    }
    object E_Direction{
        六个方向
    }
    object E_Usage{
        定义操作的用处
    }

    object Application{
        应用层
    }
    object CubeCraft{
        CubeCraft
    }
    object Context{
        上下文
    }
    object Camera{
        摄像机
    }
    object Shader{
        着色器加载
    }
    object Config{
        相关配置
    }

}

Application --> main
CubeCraft --> Application

World --> CubeCraft
Noise -> CubeCraft
Context --> CubeCraft
Renderer --> CubeCraft
E_BlockType -> CubeCraft

Chunk --> World
E_Usage --> World

Log --> Context
Shader --> Context

ChunkMeshBuilder --> Chunk

Mesh --> ChunkMeshBuilder
Block --> ChunkMeshBuilder
Croods --> ChunkMeshBuilder
Texture --> ChunkMeshBuilder
E_Direction -> ChunkMeshBuilder
VerticesData --> ChunkMeshBuilder
TextureSegmentation -> ChunkMeshBuilder

World ..> ChunkMeshBuilder

Shader --> Renderer
Camera --> Renderer
Config --> Renderer

@enduml